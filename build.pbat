def mingw1120
    github_cache(C:\mingw1120_64, :k=mingw1120_64)
    add_path(C:\mingw1120_64\bin)
    if_exist_return(C:\mingw1120_64\bin\gcc.exe)
    github_rmdir(C:\mingw64)
    pushd_cd()
        download(https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z, :cache)
        unzip(x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z, :o=C:\)
        move C:\mingw64 C:\mingw1120_64
    popd

def antlr4runtime depends on mingw1120
    github_cache(C:\antlr4\mingw1120_64, :k=antlr4runtime)
    if_exist_return(C:\antlr4\mingw1120_64\bin\libantlr4-runtime.dll)
    use(cmake)
    use(ninja)
    pushd_cd()
        git_clone(https://github.com/antlr/antlr4.git)
        pushd antlr4\runtime\Cpp
            mkdir(build)
            pushd build
                cmake -G Ninja -D CMAKE_C_COMPILER=gcc -D CMAKE_CXX_COMPILER=g++ -D CMAKE_INSTALL_PREFIX=C:/antlr4/mingw1120_64 ..
                cmake --build . --parallel
                cmake --install .
            popd
        popd
    popd

def antlr4jar
    echo USERPROFILE %USERPROFILE%
    mkdir(%USERPROFILE%\.m2\repository\org\antlr\antlr4\4.13.1)
    download(https://repo1.maven.org/maven2/org/antlr/antlr4/4.13.1/antlr4-4.13.1-complete.jar, %USERPROFILE%\.m2\repository\org\antlr\antlr4\4.13.1\antlr4-4.13.1-complete.jar, :cache)

def main depends on mingw1120 and antlr4runtime and antlr4jar
    use(ninja)
    add_path(C:\antlr4\mingw1120_64\bin)
    github_checkout()
    github_setup_java(temurin, 21)
    pushd_cd()
        mkdir(build)
        pushd build
            cmake -G Ninja -D CMAKE_C_COMPILER=gcc -D CMAKE_CXX_COMPILER=g++ -D CMAKE_PREFIX_PATH=C:\antlr4\mingw1120_64 ..
            cmake --build . --parallel
            main
        popd
    popd

github-workflow 1